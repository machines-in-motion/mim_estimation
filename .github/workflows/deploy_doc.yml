name: check_main_branch_and_deploy_doc

on:
  push:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_FOLDER: ${{github.workspace}}/../build
  DEVEL_FOLDER: ${{github.workspace}}/../devel

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
      #
      # Setup the machines and build environment
      #
      - name: Setup Ubuntu20.04.
        uses: machines-in-motion/mim_github_actions/setup_ubuntu20_04@main

      #
      # Checkout the current package locally
      #
      - name: Checkout current repo.
        uses: actions/checkout@v2

      #
      # Activate the secret ssh key
      #
      - name: Spawn ssh-agent
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.GA_SSH_PRIVATE_KEY }}

      #
      # Build and test the current package.
      #
      - name: Build and run CTest.
        shell: bash
        run: |
          mkdir -p $BUILD_FOLDER
          cd $BUILD_FOLDER
          cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DGENERATE_DOCUMENTATION=ON
          cmake --build . --config $BUILD_TYPE

      #
      # Copy the compiled documentation to the github page of the group.
      #
      - name: Copy the documentation and upload it.
        shell: bash
        run: |
          # Get repository name
          cd ${{github.workspace}}
          REPOSITORY_NAME="${PWD##*/}"
          echo "repository_name=$REPOSITORY_NAME"

          mkdir -p $DEVEL_FOLDER
          cd $DEVEL_FOLDER
          git clone git@github.com:machines-in-motion/machines-in-motion.github.io
          code_doc_dir=$DEVEL_FOLDER/machines-in-motion.github.io/code_documentation/$REPOSITORY_NAME
          if [ -d "$code_doc_dir" ]; then
            rm -r $code_doc_dir
          fi
          mkdir -p $code_doc_dir
          mv $BUILD_FOLDER/share/docs/sphinx/html $code_doc_dir/documentation
          cd $DEVEL_FOLDER/machines-in-motion.github.io
          make
          if [[ `git status --porcelain` ]]; then
            # Changes
            git add --all
            git commit -am "[Github action $REPOSITORY_NAME] update doc"
            git push origin master
          else
            # No changes
            echo "Documentation up to date"
          fi
          
